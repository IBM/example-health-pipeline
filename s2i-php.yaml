apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: s2i-php
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.19"
    tekton.dev/tags: s2i, php, workspace
    tekton.dev/displayName: "s2i php"
spec:
  description: >-
    s2i-php task clones a Git repository and builds and
    pushes a container image using S2I and a PHP builder image.

  results:
    - name: IMAGE_DIGEST
      description: Digest of the image just built.
  params:
    - name: VERSION
      description: The tag of php imagestream for php version
      default: '7.3'
      type: string
    - name: PATH_CONTEXT
      description: The location of the path to run s2i from.
      default: .
      type: string
    - name: TLSVERIFY
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "true"
      type: string
    - name: IMAGE
      description: Location of the repo where image has to be pushed
      type: string
    - name: BUILDER_IMAGE
      description: The location of the buildah builder image.
      default: quay.io/buildah/stable:v1.17.0
  workspaces:
    - name: source
      mountPath: /workspace/source
  steps:
    - name: generate
      image: quay.io/openshift-pipeline/s2i
      workingdir: $(workspaces.source.path)
      command: ['s2i', 'build', '$(params.PATH_CONTEXT)', 'image-registry.openshift-image-registry.svc:5000/openshift/php:$(params.VERSION)', '--as-dockerfile', '/gen-source/Dockerfile.gen']
      volumeMounts:
        - name: gen-source
          mountPath: /gen-source
    - name: build
      image: $(params.BUILDER_IMAGE)
      workingdir: /gen-source
      command: ['buildah', 'bud', '--storage-driver=vfs', '--tls-verify=$(params.TLSVERIFY)', '--layers', '-f', '/gen-source/Dockerfile.gen', '-t', '$(params.IMAGE)', '.']
      securityContext:
        privileged: true
        runAsUser: 0
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
        - name: gen-source
          mountPath: /gen-source
    - name: push
      image: $(params.BUILDER_IMAGE)
      command: ['buildah', 'push', '--storage-driver=vfs', '--tls-verify=$(params.TLSVERIFY)', '--digestfile=$(workspaces.source.path)/image-digest', '$(params.IMAGE)', 'docker://$(params.IMAGE)']
      securityContext:
        privileged: true
        runAsUser: 0
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
    - name: digest-to-results
      image: $(params.BUILDER_IMAGE)
      script: cat $(workspaces.source.path)/image-digest | tee /tekton/results/IMAGE_DIGEST
  volumes:
    - name: varlibcontainers
      emptyDir: {}
    - name: gen-source
      emptyDir: {}
